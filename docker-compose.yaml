services:
  postgres:
    image: "postgres:17-alpine"
    container_name: "GopherStoreDB"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "35432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  #  network_mode: host

  certManager:
    image: "gopher_keeper_server:v1"
    container_name: "GopherCertManager"
    entrypoint: "./certManager"
    volumes:
      - app_data:/app
   # network_mode: host

  gopherStore:
    image: "gopher_keeper_server:v1"
    container_name: "GopherStoreServer"
    depends_on:
      postgres:
        condition: service_healthy
      certManager:
        condition: service_completed_successfully
    environment:
      JWT_KEY: ${JWT_KEY}
      PRIVATE_KEY: ${PRIVATE_KEY}
      CERTIFICATE: ${CERTIFICATE}
      DATABASE_DSN: ${DATABASE_DSN}
      LOG_LEVEL: ${LOG_LEVEL}
    ports:
      - "4443:4443"
    volumes:
      - app_data:/app
   # network_mode: host

volumes:
  app_data:
    driver: local
    driver_opts:
      device:  /Users/amikhaylov/Downloads/shared/
      type: none
      o: bind