// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: internal/proto/handlers.proto

package protobuf

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	Handlers_PostUserData_FullMethodName     = "/server_grpc.Handlers/PostUserData"
	Handlers_PostTextData_FullMethodName     = "/server_grpc.Handlers/PostTextData"
	Handlers_GetTextData_FullMethodName      = "/server_grpc.Handlers/GetTextData"
	Handlers_PostBankCardData_FullMethodName = "/server_grpc.Handlers/PostBankCardData"
	Handlers_GetBankCardData_FullMethodName  = "/server_grpc.Handlers/GetBankCardData"
	Handlers_PostMetaData_FullMethodName     = "/server_grpc.Handlers/PostMetaData"
	Handlers_GetMetaData_FullMethodName      = "/server_grpc.Handlers/GetMetaData"
)

// HandlersClient is the client API for Handlers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type HandlersClient interface {
	PostUserData(ctx context.Context, in *PostUserDataRequest, opts ...grpc.CallOption) (*PostUserDataResponse, error)
	PostTextData(ctx context.Context, in *PostTextDataRequest, opts ...grpc.CallOption) (*PostTextDataResponse, error)
	GetTextData(ctx context.Context, in *GetTextDataRequest, opts ...grpc.CallOption) (*GetTextDataResponse, error)
	PostBankCardData(ctx context.Context, in *PostBankCardDataRequest, opts ...grpc.CallOption) (*PostBankCardDataResponse, error)
	GetBankCardData(ctx context.Context, in *GetBankCardDataRequest, opts ...grpc.CallOption) (*GetBankCardDataResponse, error)
	PostMetaData(ctx context.Context, in *PostMetaDataRequest, opts ...grpc.CallOption) (*PostMetaDataResponse, error)
	GetMetaData(ctx context.Context, in *GetMetaDataRequest, opts ...grpc.CallOption) (*GetMetaDataResponse, error)
}

type handlersClient struct {
	cc grpc.ClientConnInterface
}

func NewHandlersClient(cc grpc.ClientConnInterface) HandlersClient {
	return &handlersClient{cc}
}

func (c *handlersClient) PostUserData(ctx context.Context, in *PostUserDataRequest, opts ...grpc.CallOption) (*PostUserDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PostUserDataResponse)
	err := c.cc.Invoke(ctx, Handlers_PostUserData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handlersClient) PostTextData(ctx context.Context, in *PostTextDataRequest, opts ...grpc.CallOption) (*PostTextDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PostTextDataResponse)
	err := c.cc.Invoke(ctx, Handlers_PostTextData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handlersClient) GetTextData(ctx context.Context, in *GetTextDataRequest, opts ...grpc.CallOption) (*GetTextDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTextDataResponse)
	err := c.cc.Invoke(ctx, Handlers_GetTextData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handlersClient) PostBankCardData(ctx context.Context, in *PostBankCardDataRequest, opts ...grpc.CallOption) (*PostBankCardDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PostBankCardDataResponse)
	err := c.cc.Invoke(ctx, Handlers_PostBankCardData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handlersClient) GetBankCardData(ctx context.Context, in *GetBankCardDataRequest, opts ...grpc.CallOption) (*GetBankCardDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetBankCardDataResponse)
	err := c.cc.Invoke(ctx, Handlers_GetBankCardData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handlersClient) PostMetaData(ctx context.Context, in *PostMetaDataRequest, opts ...grpc.CallOption) (*PostMetaDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PostMetaDataResponse)
	err := c.cc.Invoke(ctx, Handlers_PostMetaData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handlersClient) GetMetaData(ctx context.Context, in *GetMetaDataRequest, opts ...grpc.CallOption) (*GetMetaDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetMetaDataResponse)
	err := c.cc.Invoke(ctx, Handlers_GetMetaData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HandlersServer is the server API for Handlers service.
// All implementations must embed UnimplementedHandlersServer
// for forward compatibility.
type HandlersServer interface {
	PostUserData(context.Context, *PostUserDataRequest) (*PostUserDataResponse, error)
	PostTextData(context.Context, *PostTextDataRequest) (*PostTextDataResponse, error)
	GetTextData(context.Context, *GetTextDataRequest) (*GetTextDataResponse, error)
	PostBankCardData(context.Context, *PostBankCardDataRequest) (*PostBankCardDataResponse, error)
	GetBankCardData(context.Context, *GetBankCardDataRequest) (*GetBankCardDataResponse, error)
	PostMetaData(context.Context, *PostMetaDataRequest) (*PostMetaDataResponse, error)
	GetMetaData(context.Context, *GetMetaDataRequest) (*GetMetaDataResponse, error)
	mustEmbedUnimplementedHandlersServer()
}

// UnimplementedHandlersServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedHandlersServer struct{}

func (UnimplementedHandlersServer) PostUserData(context.Context, *PostUserDataRequest) (*PostUserDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostUserData not implemented")
}
func (UnimplementedHandlersServer) PostTextData(context.Context, *PostTextDataRequest) (*PostTextDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostTextData not implemented")
}
func (UnimplementedHandlersServer) GetTextData(context.Context, *GetTextDataRequest) (*GetTextDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTextData not implemented")
}
func (UnimplementedHandlersServer) PostBankCardData(context.Context, *PostBankCardDataRequest) (*PostBankCardDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostBankCardData not implemented")
}
func (UnimplementedHandlersServer) GetBankCardData(context.Context, *GetBankCardDataRequest) (*GetBankCardDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBankCardData not implemented")
}
func (UnimplementedHandlersServer) PostMetaData(context.Context, *PostMetaDataRequest) (*PostMetaDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostMetaData not implemented")
}
func (UnimplementedHandlersServer) GetMetaData(context.Context, *GetMetaDataRequest) (*GetMetaDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetaData not implemented")
}
func (UnimplementedHandlersServer) mustEmbedUnimplementedHandlersServer() {}
func (UnimplementedHandlersServer) testEmbeddedByValue()                  {}

// UnsafeHandlersServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to HandlersServer will
// result in compilation errors.
type UnsafeHandlersServer interface {
	mustEmbedUnimplementedHandlersServer()
}

func RegisterHandlersServer(s grpc.ServiceRegistrar, srv HandlersServer) {
	// If the following call pancis, it indicates UnimplementedHandlersServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&Handlers_ServiceDesc, srv)
}

func _Handlers_PostUserData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostUserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlersServer).PostUserData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Handlers_PostUserData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlersServer).PostUserData(ctx, req.(*PostUserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Handlers_PostTextData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostTextDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlersServer).PostTextData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Handlers_PostTextData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlersServer).PostTextData(ctx, req.(*PostTextDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Handlers_GetTextData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTextDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlersServer).GetTextData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Handlers_GetTextData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlersServer).GetTextData(ctx, req.(*GetTextDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Handlers_PostBankCardData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostBankCardDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlersServer).PostBankCardData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Handlers_PostBankCardData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlersServer).PostBankCardData(ctx, req.(*PostBankCardDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Handlers_GetBankCardData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBankCardDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlersServer).GetBankCardData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Handlers_GetBankCardData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlersServer).GetBankCardData(ctx, req.(*GetBankCardDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Handlers_PostMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostMetaDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlersServer).PostMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Handlers_PostMetaData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlersServer).PostMetaData(ctx, req.(*PostMetaDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Handlers_GetMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMetaDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlersServer).GetMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Handlers_GetMetaData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlersServer).GetMetaData(ctx, req.(*GetMetaDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Handlers_ServiceDesc is the grpc.ServiceDesc for Handlers service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Handlers_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "server_grpc.Handlers",
	HandlerType: (*HandlersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostUserData",
			Handler:    _Handlers_PostUserData_Handler,
		},
		{
			MethodName: "PostTextData",
			Handler:    _Handlers_PostTextData_Handler,
		},
		{
			MethodName: "GetTextData",
			Handler:    _Handlers_GetTextData_Handler,
		},
		{
			MethodName: "PostBankCardData",
			Handler:    _Handlers_PostBankCardData_Handler,
		},
		{
			MethodName: "GetBankCardData",
			Handler:    _Handlers_GetBankCardData_Handler,
		},
		{
			MethodName: "PostMetaData",
			Handler:    _Handlers_PostMetaData_Handler,
		},
		{
			MethodName: "GetMetaData",
			Handler:    _Handlers_GetMetaData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/proto/handlers.proto",
}
